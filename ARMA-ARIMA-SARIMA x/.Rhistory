# Gross Domestic Product
adf_gdp <- adf.test(log(data_gdp))
print("ADF test for Gross Domestic Product")
print(adf_gdp)
# Real Disposable Income
adf_rdi <- adf.test(log(data_rdi))
print("ADF test for Real Disposable Income")
print(adf_rdi)
diff1 <- diff(data_cpi)
adf.test(diff1)
diff1 <- diff(data_gdp)
adf.test(diff1)
diff1 <- diff(data_rdi)
adf.test(diff1)
library(plotly)
library(dplyr)
library(gridExtra)
library(vars)
library(GGally)
library(lmtest)
library(ggplot2)
library(tseries)
library(forecast)
grossDP_us <- read.csv("Gross Domestic Product US.csv")
consumerPI_us <- read.csv("Consumer Price Index US.csv")
realDI_us <- read.csv("Real Disposable Personal Income US.csv")
unemploymentR_us <- read.csv("Unemployment Rate US.csv")
grossDP_us$DATE <- as.Date(grossDP_us$DATE)
consumerPI_us$DATE <- as.Date(consumerPI_us$DATE)
realDI_us$DATE <- as.Date(realDI_us$DATE)
unemploymentR_us$DATE <- as.Date(unemploymentR_us$DATE)
colnames(grossDP_us)[2] <- "DATA"
colnames(consumerPI_us)[2] <- "DATA"
colnames(realDI_us)[2] <- "DATA"
colnames(unemploymentR_us)[2] <- "DATA"
consumerPI_us <- consumerPI_us %>%
mutate(RATE = (DATA - lag(DATA)) / lag(DATA) * 100)
merged_data <- Reduce(function(x, y) merge(x, y, by = "DATE"), list(grossDP_us, consumerPI_us, realDI_us, unemploymentR_us))
colnames(merged_data)[2] <- "grossDP_us"
colnames(merged_data)[3] <- "consumerPI_us"
colnames(merged_data)[4] <- "consumerPIR_us"
colnames(merged_data)[5] <- "realDI_us"
colnames(merged_data)[6] <- "unemploymentR_us"
# Consumer Price Index
adf_cpi <- adf.test(log(data_cpi))
print("ADF test for Consumer Price Index")
print(adf_cpi)
# Gross Domestic Product
adf_gdp <- adf.test(log(data_gdp))
print("ADF test for Gross Domestic Product")
print(adf_gdp)
# Real Disposable Income
adf_rdi <- adf.test(log(data_rdi))
print("ADF test for Real Disposable Income")
print(adf_rdi)
diff1 <- diff(data_cpi)
adf.test(diff1)
diff1 <- diff(data_gdp)
adf.test(diff1)
diff1 <- diff(data_rdi)
adf.test(diff1)
library(plotly)
library(dplyr)
library(gridExtra)
library(vars)
library(GGally)
library(lmtest)
library(ggplot2)
library(tseries)
library(forecast)
grossDP_us <- read.csv("Gross Domestic Product US.csv")
consumerPI_us <- read.csv("Consumer Price Index US.csv")
realDI_us <- read.csv("Real Disposable Personal Income US.csv")
unemploymentR_us <- read.csv("Unemployment Rate US.csv")
grossDP_us$DATE <- as.Date(grossDP_us$DATE)
consumerPI_us$DATE <- as.Date(consumerPI_us$DATE)
realDI_us$DATE <- as.Date(realDI_us$DATE)
unemploymentR_us$DATE <- as.Date(unemploymentR_us$DATE)
colnames(grossDP_us)[2] <- "DATA"
colnames(consumerPI_us)[2] <- "DATA"
colnames(realDI_us)[2] <- "DATA"
colnames(unemploymentR_us)[2] <- "DATA"
consumerPI_us <- consumerPI_us %>%
mutate(RATE = (DATA - lag(DATA)) / lag(DATA) * 100)
merged_data <- Reduce(function(x, y) merge(x, y, by = "DATE"), list(grossDP_us, consumerPI_us, realDI_us, unemploymentR_us))
colnames(merged_data)[2] <- "grossDP_us"
colnames(merged_data)[3] <- "consumerPI_us"
colnames(merged_data)[4] <- "consumerPIR_us"
colnames(merged_data)[5] <- "realDI_us"
colnames(merged_data)[6] <- "unemploymentR_us"
# Consumer Price Index
adf_cpi <- adf.test(log(data_cpi))
# Consumer Price Index Rate
data_cpir <- ts(remove_missing_values(consumerPI_us$RATE), frequency = 12, start = c(1947, 2))
remove_missing_values <- function(data) {
return(data[!is.na(data)])
}
# Consumer Price Index Rate
data_cpir <- ts(remove_missing_values(consumerPI_us$RATE), frequency = 12, start = c(1947, 2))
# Unemployment Rate
data_unemployment <- ts(remove_missing_values(unemploymentR_us$DATA), frequency = 12, start = c(1976, 1))
# Consumer Price Index
data_cpi <- ts(remove_missing_values(consumerPI_us$DATA), frequency = 12, start = c(1947, 1))
# Gross Domestic Product
data_gdp <- ts(remove_missing_values(grossDP_us$DATA), frequency = 12, start = c(1947, 1))
# Real Disposable Income
data_rdi <- ts(remove_missing_values(realDI_us$DATA), frequency = 12, start = c(1951, 1))
library(plotly)
library(dplyr)
library(gridExtra)
library(vars)
library(GGally)
library(lmtest)
library(ggplot2)
library(tseries)
library(forecast)
grossDP_us <- read.csv("Gross Domestic Product US.csv")
consumerPI_us <- read.csv("Consumer Price Index US.csv")
realDI_us <- read.csv("Real Disposable Personal Income US.csv")
unemploymentR_us <- read.csv("Unemployment Rate US.csv")
grossDP_us$DATE <- as.Date(grossDP_us$DATE)
consumerPI_us$DATE <- as.Date(consumerPI_us$DATE)
realDI_us$DATE <- as.Date(realDI_us$DATE)
unemploymentR_us$DATE <- as.Date(unemploymentR_us$DATE)
colnames(grossDP_us)[2] <- "DATA"
colnames(consumerPI_us)[2] <- "DATA"
colnames(realDI_us)[2] <- "DATA"
colnames(unemploymentR_us)[2] <- "DATA"
consumerPI_us <- consumerPI_us %>%
mutate(RATE = (DATA - lag(DATA)) / lag(DATA) * 100)
merged_data <- Reduce(function(x, y) merge(x, y, by = "DATE"), list(grossDP_us, consumerPI_us, realDI_us, unemploymentR_us))
colnames(merged_data)[2] <- "grossDP_us"
colnames(merged_data)[3] <- "consumerPI_us"
colnames(merged_data)[4] <- "consumerPIR_us"
colnames(merged_data)[5] <- "realDI_us"
colnames(merged_data)[6] <- "unemploymentR_us"
remove_missing_values <- function(data) {
return(data[!is.na(data)])
}
# Consumer Price Index Rate
data_cpir <- ts(remove_missing_values(consumerPI_us$RATE), frequency = 12, start = c(1947, 2))
# Unemployment Rate
data_unemployment <- ts(remove_missing_values(unemploymentR_us$DATA), frequency = 12, start = c(1976, 1))
# Consumer Price Index
data_cpi <- ts(remove_missing_values(consumerPI_us$DATA), frequency = 12, start = c(1947, 1))
# Gross Domestic Product
data_gdp <- ts(remove_missing_values(grossDP_us$DATA), frequency = 12, start = c(1947, 1))
# Real Disposable Income
data_rdi <- ts(remove_missing_values(realDI_us$DATA), frequency = 12, start = c(1951, 1))
# Consumer Price Index
adf_cpi <- adf.test(log(data_cpi))
print("ADF test for Consumer Price Index")
print(adf_cpi)
# Gross Domestic Product
adf_gdp <- adf.test(log(data_gdp))
print("ADF test for Gross Domestic Product")
print(adf_gdp)
# Real Disposable Income
adf_rdi <- adf.test(log(data_rdi))
print("ADF test for Real Disposable Income")
print(adf_rdi)
diff1 <- diff(data_cpi)
adf.test(diff1)
diff1 <- diff(data_gdp)
adf.test(diff1)
diff1 <- diff(data_rdi)
adf.test(diff1)
library(plotly)
library(dplyr)
library(gridExtra)
library(vars)
library(GGally)
library(lmtest)
library(ggplot2)
library(tseries)
library(forecast)
grossDP_us <- read.csv("Gross Domestic Product US.csv")
consumerPI_us <- read.csv("Consumer Price Index US.csv")
realDI_us <- read.csv("Real Disposable Personal Income US.csv")
unemploymentR_us <- read.csv("Unemployment Rate US.csv")
grossDP_us$DATE <- as.Date(grossDP_us$DATE)
consumerPI_us$DATE <- as.Date(consumerPI_us$DATE)
realDI_us$DATE <- as.Date(realDI_us$DATE)
unemploymentR_us$DATE <- as.Date(unemploymentR_us$DATE)
colnames(grossDP_us)[2] <- "DATA"
colnames(consumerPI_us)[2] <- "DATA"
colnames(realDI_us)[2] <- "DATA"
colnames(unemploymentR_us)[2] <- "DATA"
consumerPI_us <- consumerPI_us %>%
mutate(RATE = (DATA - lag(DATA)) / lag(DATA) * 100)
merged_data <- Reduce(function(x, y) merge(x, y, by = "DATE"), list(grossDP_us, consumerPI_us, realDI_us, unemploymentR_us))
colnames(merged_data)[2] <- "grossDP_us"
colnames(merged_data)[3] <- "consumerPI_us"
colnames(merged_data)[4] <- "consumerPIR_us"
colnames(merged_data)[5] <- "realDI_us"
colnames(merged_data)[6] <- "unemploymentR_us"
remove_missing_values <- function(data) {
return(data[!is.na(data)])
}
# Consumer Price Index Rate
data_cpir <- ts(remove_missing_values(consumerPI_us$RATE), frequency = 12, start = c(1947, 2))
# Unemployment Rate
data_unemployment <- ts(remove_missing_values(unemploymentR_us$DATA), frequency = 12, start = c(1976, 1))
# Consumer Price Index
data_cpi <- ts(remove_missing_values(consumerPI_us$DATA), frequency = 12, start = c(1947, 1))
# Gross Domestic Product
data_gdp <- ts(remove_missing_values(grossDP_us$DATA), frequency = 12, start = c(1947, 1))
# Real Disposable Income
data_rdi <- ts(remove_missing_values(realDI_us$DATA), frequency = 12, start = c(1951, 1))
# Consumer Price Index
adf_cpi <- adf.test(log(data_cpi))
print("ADF test for Consumer Price Index")
print(adf_cpi)
# Gross Domestic Product
adf_gdp <- adf.test(log(data_gdp))
print("ADF test for Gross Domestic Product")
print(adf_gdp)
# Real Disposable Income
adf_rdi <- adf.test(log(data_rdi))
print("ADF test for Real Disposable Income")
print(adf_rdi)
diff1_data_cpi <- diff(data_cpi)
adf.test(diff1)
library(plotly)
library(dplyr)
library(gridExtra)
library(vars)
library(GGally)
library(lmtest)
library(ggplot2)
library(tseries)
library(forecast)
grossDP_us <- read.csv("Gross Domestic Product US.csv")
consumerPI_us <- read.csv("Consumer Price Index US.csv")
realDI_us <- read.csv("Real Disposable Personal Income US.csv")
unemploymentR_us <- read.csv("Unemployment Rate US.csv")
grossDP_us$DATE <- as.Date(grossDP_us$DATE)
consumerPI_us$DATE <- as.Date(consumerPI_us$DATE)
realDI_us$DATE <- as.Date(realDI_us$DATE)
unemploymentR_us$DATE <- as.Date(unemploymentR_us$DATE)
colnames(grossDP_us)[2] <- "DATA"
colnames(consumerPI_us)[2] <- "DATA"
colnames(realDI_us)[2] <- "DATA"
colnames(unemploymentR_us)[2] <- "DATA"
consumerPI_us <- consumerPI_us %>%
mutate(RATE = (DATA - lag(DATA)) / lag(DATA) * 100)
merged_data <- Reduce(function(x, y) merge(x, y, by = "DATE"), list(grossDP_us, consumerPI_us, realDI_us, unemploymentR_us))
colnames(merged_data)[2] <- "grossDP_us"
colnames(merged_data)[3] <- "consumerPI_us"
colnames(merged_data)[4] <- "consumerPIR_us"
colnames(merged_data)[5] <- "realDI_us"
colnames(merged_data)[6] <- "unemploymentR_us"
remove_missing_values <- function(data) {
return(data[!is.na(data)])
}
# Consumer Price Index Rate
data_cpir <- ts(remove_missing_values(consumerPI_us$RATE), frequency = 12, start = c(1947, 2))
# Unemployment Rate
data_unemployment <- ts(remove_missing_values(unemploymentR_us$DATA), frequency = 12, start = c(1976, 1))
# Consumer Price Index
data_cpi <- ts(remove_missing_values(consumerPI_us$DATA), frequency = 12, start = c(1947, 1))
# Gross Domestic Product
data_gdp <- ts(remove_missing_values(grossDP_us$DATA), frequency = 12, start = c(1947, 1))
# Real Disposable Income
data_rdi <- ts(remove_missing_values(realDI_us$DATA), frequency = 12, start = c(1951, 1))
# Consumer Price Index
adf_cpi <- adf.test(log(data_cpi))
print("ADF test for Consumer Price Index")
print(adf_cpi)
# Gross Domestic Product
adf_gdp <- adf.test(log(data_gdp))
print("ADF test for Gross Domestic Product")
print(adf_gdp)
# Real Disposable Income
adf_rdi <- adf.test(log(data_rdi))
print("ADF test for Real Disposable Income")
print(adf_rdi)
diff1_data_cpi <- diff(data_cpi)
adf.test(diff1_data_cpi)
diff1_data_gdp <- diff(data_gdp)
adf.test(diff1_data_gdp)
diff1_data_rdi <- diff(data_rdi)
adf.test(diff1_data_rdi)
plot(diff1_data_cpi)
plot(diff1_data_gdp)
plot(diff1_data_rdi)
# Plot first order differencing for CPI data
plot(diff1_data_cpi, main = "First Order Differencing of Consumer Price Index (CPI) for All Urban Consumers (CPI-U) in the U.S.", ylab = "Value")
# Plot first order differencing for GDP data
plot(diff1_data_gdp, main = "First Order Differencing of Gross Domestic Product (GDP) in the U.S.", ylab = "Value")
# Plot first order differencing for RDI data
plot(diff1_data_rdi, main = "First Order Differencing of Research and Development Expenditures (RDI) in the U.S.", ylab = "Value")
# Plot first order differencing for CPI data
plot(diff1_data_cpi, main = "First Order Differencing of Consumer Price Index (CPI) in the U.S.", ylab = "Value")
# Plot first order differencing for GDP data
plot(diff1_data_gdp, main = "First Order Differencing of Gross Domestic Product (GDP) in the U.S.", ylab = "Value")
# Plot first order differencing for RDI data
plot(diff1_data_rdi, main = "First Order Differencing of Real Disposable Income (RDI) in the U.S.", ylab = "Value")
library(plotly)
library(dplyr)
library(gridExtra)
library(vars)
library(GGally)
library(lmtest)
library(ggplot2)
library(tseries)
library(forecast)
grossDP_us <- read.csv("Gross Domestic Product US.csv")
consumerPI_us <- read.csv("Consumer Price Index US.csv")
realDI_us <- read.csv("Real Disposable Personal Income US.csv")
unemploymentR_us <- read.csv("Unemployment Rate US.csv")
library(plotly)
library(dplyr)
library(gridExtra)
library(vars)
library(GGally)
library(lmtest)
library(ggplot2)
library(tseries)
library(forecast)
grossDP_us <- read.csv("Gross Domestic Product US.csv")
consumerPI_us <- read.csv("Consumer Price Index US.csv")
realDI_us <- read.csv("Real Disposable Personal Income US.csv")
unemploymentR_us <- read.csv("Unemployment Rate US.csv")
grossDP_us$DATE <- as.Date(grossDP_us$DATE)
consumerPI_us$DATE <- as.Date(consumerPI_us$DATE)
realDI_us$DATE <- as.Date(realDI_us$DATE)
unemploymentR_us$DATE <- as.Date(unemploymentR_us$DATE)
colnames(grossDP_us)[2] <- "DATA"
colnames(consumerPI_us)[2] <- "DATA"
colnames(realDI_us)[2] <- "DATA"
colnames(unemploymentR_us)[2] <- "DATA"
consumerPI_us <- consumerPI_us %>%
mutate(RATE = (DATA - lag(DATA)) / lag(DATA) * 100)
merged_data <- Reduce(function(x, y) merge(x, y, by = "DATE"), list(grossDP_us, consumerPI_us, realDI_us, unemploymentR_us))
colnames(merged_data)[2] <- "grossDP_us"
colnames(merged_data)[3] <- "consumerPI_us"
colnames(merged_data)[4] <- "consumerPIR_us"
colnames(merged_data)[5] <- "realDI_us"
colnames(merged_data)[6] <- "unemploymentR_us"
remove_missing_values <- function(data) {
return(data[!is.na(data)])
}
# Consumer Price Index Rate
data_cpir <- ts(remove_missing_values(consumerPI_us$RATE), frequency = 12, start = c(1947, 2))
# Unemployment Rate
data_unemployment <- ts(remove_missing_values(unemploymentR_us$DATA), frequency = 12, start = c(1976, 1))
# Consumer Price Index
data_cpi <- ts(remove_missing_values(consumerPI_us$DATA), frequency = 12, start = c(1947, 1))
# Gross Domestic Product
data_gdp <- ts(remove_missing_values(grossDP_us$DATA), frequency = 12, start = c(1947, 1))
# Real Disposable Income
data_rdi <- ts(remove_missing_values(realDI_us$DATA), frequency = 12, start = c(1951, 1))
# Consumer Price Index
adf_cpi <- adf.test(log(data_cpi))
print("ADF test for Consumer Price Index")
print(adf_cpi)
# Gross Domestic Product
adf_gdp <- adf.test(log(data_gdp))
print("ADF test for Gross Domestic Product")
print(adf_gdp)
# Real Disposable Income
adf_rdi <- adf.test(log(data_rdi))
print("ADF test for Real Disposable Income")
print(adf_rdi)
diff1_data_cpi <- diff(data_cpi)
adf.test(diff1_data_cpi)
diff1_data_gdp <- diff(data_gdp)
adf.test(diff1_data_gdp)
diff1_data_rdi <- diff(data_rdi)
adf.test(diff1_data_rdi)
# Plot first order differencing for CPI data
plot(diff1_data_cpi, main = "First Order Differencing of Consumer Price Index (CPI) in the U.S.", ylab = "Value")
# Plot first order differencing for GDP data
plot(diff1_data_gdp, main = "First Order Differencing of Gross Domestic Product (GDP) in the U.S.", ylab = "Value")
# Plot first order differencing for RDI data
plot(diff1_data_rdi, main = "First Order Differencing of Real Disposable Income (RDI) in the U.S.", ylab = "Value")
# Create ACF and PACF plots for first order differencing of CPI data
acf(diff1_data_cpi, main = "ACF of First Order Differencing of Consumer Price Index (CPI) in the U.S.")
pacf(diff1_data_cpi, main = "PACF of First Order Differencing of Consumer Price Index (CPI) in the U.S.")
# Create ACF and PACF plots for first order differencing of GDP data
acf(diff1_data_gdp, main = "ACF of First Order Differencing of Gross Domestic Product (GDP) in the U.S.")
pacf(diff1_data_gdp, main = "PACF of First Order Differencing of Gross Domestic Product (GDP) in the U.S.")
# Create ACF and PACF plots for first order differencing of RDI data
acf(diff1_data_rdi, main = "ACF of First Order Differencing of Real Disposable Income (RDI) in the U.S.")
pacf(diff1_data_rdi, main = "PACF of First Order Differencing of Real Disposable Income (RDI) in the U.S.")
# Set plot size
par(pty = "s", fig.width = 8, fig.height = 8)
# Create ACF and PACF plots for first order differencing of CPI data
acf(diff1_data_cpi, main = "ACF of First Order Differencing of Consumer Price Index (CPI) in the U.S.")
pacf(diff1_data_cpi, main = "PACF of First Order Differencing of Consumer Price Index (CPI) in the U.S.")
# Create ACF and PACF plots for first order differencing of GDP data
acf(diff1_data_gdp, main = "ACF of First Order Differencing of Gross Domestic Product (GDP) in the U.S.")
pacf(diff1_data_gdp, main = "PACF of First Order Differencing of Gross Domestic Product (GDP) in the U.S.")
# Create ACF and PACF plots for first order differencing of RDI data
acf(diff1_data_rdi, main = "ACF of First Order Differencing of Real Disposable Income (RDI) in the U.S.")
pacf(diff1_data_rdi, main = "PACF of First Order Differencing of Real Disposable Income (RDI) in the U.S.")
# Set plot size
par(pty = "s", fig.width = 8, fig.height = 16)
# Create ACF and PACF plots for first order differencing of CPI data
acf(diff1_data_cpi, main = "ACF of First Order Differencing of Consumer Price Index (CPI) in the U.S.")
pacf(diff1_data_cpi, main = "PACF of First Order Differencing of Consumer Price Index (CPI) in the U.S.")
# Create ACF and PACF plots for first order differencing of GDP data
acf(diff1_data_gdp, main = "ACF of First Order Differencing of Gross Domestic Product (GDP) in the U.S.")
pacf(diff1_data_gdp, main = "PACF of First Order Differencing of Gross Domestic Product (GDP) in the U.S.")
# Create ACF and PACF plots for first order differencing of RDI data
acf(diff1_data_rdi, main = "ACF of First Order Differencing of Real Disposable Income (RDI) in the U.S.")
pacf(diff1_data_rdi, main = "PACF of First Order Differencing of Real Disposable Income (RDI) in the U.S.")
# Set plot size
par(pty = "s", fig.width = 10, fig.height = 12)
# Create ACF and PACF plots for first order differencing of CPI data
cpi_acf <- acf(diff1_data_cpi, plot = FALSE)
cpi_pacf <- pacf(diff1_data_cpi, plot = FALSE)
# Create ACF and PACF plots for first order differencing of GDP data
gdp_acf <- acf(diff1_data_gdp, plot = FALSE)
gdp_pacf <- pacf(diff1_data_gdp, plot = FALSE)
# Create ACF and PACF plots for first order differencing of RDI data
rdi_acf <- acf(diff1_data_rdi, plot = FALSE)
rdi_pacf <- pacf(diff1_data_rdi, plot = FALSE)
# Set up layout for the plots
layout(matrix(c(1, 2, 3, 4, 5, 6), ncol = 2, byrow = TRUE))
# Plot the ACF and PACF for CPI data
plot(cpi_acf, main = "ACF of First Order Differencing of CPI\n", sub = NULL, ylab = "Correlation", xlab = "Lag")
plot(cpi_pacf, main = "PACF of First Order Differencing of CPI\n", sub = NULL, ylab = "Correlation", xlab = "Lag")
# Plot the ACF and PACF for GDP data
plot(gdp_acf, main = "ACF of First Order Differencing of GDP\n", sub = NULL, ylab = "Correlation", xlab = "Lag")
plot(gdp_pacf, main = "PACF of First Order Differencing of GDP\n", sub = NULL, ylab = "Correlation", xlab = "Lag")
# Plot the ACF and PACF for RDI data
plot(rdi_acf, main = "ACF of First Order Differencing of RDI\n", sub = NULL, ylab = "Correlation", xlab = "Lag")
plot(rdi_pacf, main = "PACF of First Order Differencing of RDI\n", sub = NULL, ylab = "Correlation", xlab = "Lag")
# Original data plot
autoplot(data_unemployment) + ggtitle(paste("Original", title))
# Original data plot
autoplot(data_unemployment)
# ACF plot for original data
ggAcf(data_unemployment)
# PACF plot for original data
ggPacf(data_unemployment)
library(plotly)
library(dplyr)
library(gridExtra)
library(ggfortify)
install.packages("ggfortify")
library(plotly)
library(dplyr)
library(gridExtra)
library(ggfortify)
library(vars)
library(GGally)
library(lmtest)
library(ggplot2)
library(tseries)
library(forecast)
# Original data plot
autoplot(data_unemployment)
# ACF plot for original data
ggAcf(data_unemployment)
# PACF plot for original data
ggPacf(data_unemployment)
# Original data plot
orig_plot <- autoplot(data_unemployment) + ggtitle("Unemployment Rate in the U.S.")
# ACF plot for original data
acf_plot <- ggAcf(data_unemployment) + ggtitle("ACF of Unemployment Rate in the U.S.")
# PACF plot for original data
pacf_plot <- ggPacf(data_unemployment) + ggtitle("PACF of Unemployment Rate in the U.S.")
# Group plots together
grid.arrange(orig_plot, acf_plot, pacf_plot, ncol = 1)
# Unemployment Rate
adf_unemployment <- adf.test(data_unemployment)
print("ADF test for Unemployment Rate")
print(adf_unemployment)
auto.arima(data_unemployment)
# Fit ARIMA(1,0,1) model to time series data
arima_model <- arima(data, order = c(1, 0, 0))
# Fit ARIMA(1,0,1) model to time series data
arima_model <- arima(data_unemployment, order = c(1, 0, 0))
summary(arima_model)
auto.arima(data_unemployment)
# Fit ARIMA(1,0,1) model to time series data
arima_model <- arima(data_unemployment, order = c(1, 0, 0))
summary(arima_model)
# Calculate AIC
AIC(arima_model)
# Calculate AICC
AICc(arima_model)
# Fit ARIMA(1,0,1) model to time series data
arima_model <- arima(data_unemployment, order = c(1, 0, 0))
summary(arima_model)
# Calculate AIC
AIC(arima_model)
# Calculate BIC
BIC(arima_model)
auto.arima(data_unemployment)
# Fit ARIMA(1,0,1) model to time series data
arima_model <- arima(data_unemployment, order = c(1, 0, 0))
arima_model
auto.arima(data_unemployment)
auto.arima(data_unemployment)
checkresiduals(arima_model)
# Extract residuals from the model
residuals <- residuals(arima_model)
# Create Q-Q plot of the residuals
qqnorm(residuals)
qqline(residuals)
# Forecast future values with 95% confidence interval
forecast_result <- forecast(arima_model, h = 10, level = 0.95)
# Plot forecast values and confidence intervals
autoplot(forecast_result)
# Forecast future values with 95% confidence interval
forecast_result <- forecast(arima_model, h = 10, level = 0.95)
# Plot forecast values and confidence intervals
autoplot(forecast_result) + ggtitle("Forecasts from ARIMA (1, 0, 0)")
